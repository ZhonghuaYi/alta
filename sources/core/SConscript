import os
import sys

Import('env', 'ALTA_LIBS')

sources = ['common.cpp',
           'data.cpp',
           'data_storage.cpp',
           'function.cpp',
           'params.cpp',
           'plugins_manager.cpp',
           'rational_function.cpp',
           'vertical_segment.cpp',
           'metrics.cpp']

headers = [ 'args.h',
            'clustering.h',
            'common.h',
            'data.h',
            'data_storage.h',
            'fitter.h',
            'function.h',
            'metrics.h',
            'params.h',
            'plugins_manager.h',
            'ptr.h',
            'rational_function.h',
            'vertical_segment.h' ]

CCFLAGS = env['CCFLAGS']

## Known compilation issue. If the core is not compiled with -fvisibility-hidden
## on OSX, the shared libraries and the softwares cannot share vtables. This
## impact the use of dynamic_cast in shared libraries.
##
if sys.platform == 'darwin':
	CCFLAGS = CCFLAGS + ' -fvisibility=hidden'

if env['CC'] != 'cl':
	# We're not building a real static library, but rather what
	# Libtool calls a "convenience library": an archive that
	# contains PIC code.  Thus, force '-fPIC'.
	CCFLAGS = CCFLAGS + ' -fPIC'

# Tell the plugin manager where to look for plugins by default.
# Note: This must be kept in sync with 'plugins/SConscript'.
plugin_dir = env['INSTALL_PREFIX'] + '/lib/alta'
env.AppendUnique(CPPFLAGS = ['-DALTA_PLUGIN_DIRECTORY=\\"'
                             + plugin_dir + '\\"'])


lib = env.StaticLibrary('#build/core/core', source = sources,
                        LIBS = ALTA_LIBS,
                        CPPPATH = env['CPPPATH'] + env['EIGEN_INC'],
                        CCFLAGS = CCFLAGS)

env.Install(env['INSTALL_PREFIX'] + '/lib', lib)
env.Install(env['INSTALL_PREFIX'] + '/include/alta', headers)
