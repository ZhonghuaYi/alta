Import('env')
env = env.Clone()

# We always build Quadprog++ in external/ so no need to check for its
# availability: this plugin can always be built.

env.AppendUnique(CPPPATH = env['QUADPROG_INC'])
env.AppendUnique(LIBPATH = env['QUADPROG_DIR'])
env.AppendUnique(LIBS    = env['QUADPROG_LIB'])
env.AppendUnique(LIBS    = env['PLUGIN_LIB'])

env.AppendUnique(CCFLAGS = env['OPENMP_FLAG'])

conf = Configure(env)
if env['OPENMP_LIB'] and conf.CheckLib(env['OPENMP_LIB']):
	env.AppendUnique(LIBS = env['OPENMP_LIB'])
env = conf.Finish()

sources = ['rational_fitter.cpp']
env.SharedLibrary('../../build/rational_fitter_parallel', sources)
