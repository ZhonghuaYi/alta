Import('env')
env = env.Clone()

env.AppendUnique(CPPPATH = env['QUADPROG_INC'])
env.AppendUnique(LIBPATH = env['QUADPROG_DIR'])
env.AppendUnique(LIBS    = env['QUADPROG_LIB'])
env.AppendUnique(LIBS    = env['PLUGIN_LIB'])

conf = Configure(env)

build_lib = False

if conf.CheckLib(env['QUADPROG_LIB'], language='c++'):	

	env.AppendUnique(CCFLAGS = env['OPENMP_FLAG'])
	if env['OPENMP_LIB'] and conf.CheckLib(env['OPENMP_LIB']):
		env.AppendUnique(LIBS = env['OPENMP_LIB'])

	build_lib = True

env = conf.Finish()

if build_lib:
	sources = ['rational_fitter.cpp']
	env.SharedLibrary('../../build/rational_fitter_parallel', sources)
